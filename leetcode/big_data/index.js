var num1 = '84578489328393574838928492839458984935787392839284923881001118397829477918743977234543212343312435465434354698767867897679877867878797867869786778678678687867867867867867867867867897867867878678678678786786786098978970897878979898987897987989878977879878979879879879879879786897987987987987789878798798798798798798797898798798798989808978897897897898978978767865',
    num2 = '5648739324096753928398989898989898888888888888888888888888888888999798756987689769788977897698767897698768976897698797889767868786886786786786786875678678678686587657655765433656433098089089898978977988976897876978678678678678678678678678678678678678678678678687678678678678667876867678670890987897098709876987608970897089708970897';
// console.log(num1 + num2);

// ??  大数相加  数字超过语言的计算范围
// 两数相加，  数小时
// 123
//  45
// 175
// 在内存中表达，数字型Number  Infinity 
// 每次取出最后一位，相加

function addTwoNumber(str1, str2) {
    // 1. 字符串从尾部到首部
    // 2. 两个数的位数是不一样的
    var carry = 0;  // 进位 计算每一个回合的进位 
        l1 = str1.length,
        l2 = str2.length,
        arr = [];  // 放结果  
    var max = Math.max(l1, l2);  // 不一样长
    for(var i = l1 - 1, j = l2 - 1, n = max - 1; n >= 0; n--, i--, j--){
        var sum = (+str1[i] || 0) + (+str2[j] || 0) + carry; // 每一次的相加和
        // console.log(sum);
        // break;
        if(sum >= 10){
            carry = 1;
            arr.push(sum - 10);
        } else {
            carry = 0;
            arr.push(sum);
        }
    }
    if(carry > 0) arr.push(carry);
    return arr.reverse().join('');
}
console.log(addTwoNumber(num1, num2));